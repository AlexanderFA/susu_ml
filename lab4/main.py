import matplotlib.pyplot as plt
from scipy.io import loadmat
from sklearn import svm
import mglearn

data = loadmat('ex4data1.mat')
features = data["X"]
labels = data["y"].ravel()

mglearn.discrete_scatter(features[:, 0], features[:, 1], labels)
plt.legend(["Class 0", "Class 1"], loc=4)
plt.xlabel("–ü—Ä–∏–∑–Ω–∞–∫ 1")
plt.ylabel("–ü—Ä–∏–∑–Ω–∞–∫ 2")
plt.show()
print("X.shape: {}".format(features.shape))  # (51, 2) 51 —ç–ª–µ–º–µ–Ω—Ç, –∫–∞–∂–¥—ã–π –∏–º–µ–µ—Ç 2 –ø—Ä–∏–∑–Ω–∞–∫–∞

# –ë–æ–ª—å—à–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ C —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –º–∞–ª–æ–º—É –∑–Ω–∞—á–µ–Ω–∏—é ùúÜ. –†–µ–≥—É–ª—è—Ä–∏–∑–∞—Ü–∏–∏ –Ω–µ—Ç, –º–æ–¥–µ–ª—å —Å–∫–ª–æ–Ω–Ω–∞ –∫ –ø–µ—Ä–µ–æ–±—É—á–µ–Ω–∏—é –∏ "–ª–æ–≤–∏—Ç" –≤—ã–±—Ä–æ—Å—ã
sv_classifier = svm.LinearSVC(C=1, loss='hinge', max_iter=10000)
sv_classifier.fit(features, labels)
score = sv_classifier.score(features, labels)
print(score)
mglearn.plots.plot_2d_separator(sv_classifier, features, eps=.5)
mglearn.discrete_scatter(features[:, 0], features[:, 1], labels)
plt.show()
